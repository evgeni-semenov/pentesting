#!/usr/bin/env python3

### MAC address changer
### requires sudo / root to work properly

import subprocess
import optparse  #user input parser
import re

# Argument parser function
def get_arguments():
    parser = optparse.OptionParser()
    parser.add_option("-i", "--interface", dest="interface", help="Interface to change its MAC address")
    parser.add_option("-m", "--mac", dest="new_mac", help="New MAC address")
    (options, arguments) = parser.parse_args()
    if not options.interface:
        parser.error("[-] Please specify an interface, use --help for more info")
    elif not options.new_mac:
        parser.error("[-] Please specify a new MAC address, use --help for more info")
    return options

# Change MAC address with ifconfig function
def change_mac(interface, new_mac):
    print("[+] Changing MAC address for " + interface + " to " + new_mac)
    subprocess.call(["ifconfig", interface, "down"])
    subprocess.call(["ifconfig", interface, "hw", "ether", new_mac])
    subprocess.call(["ifconfig", interface, "up"])

def get_current_mac(interface):
    ifconfig_result = subprocess.check_output(["ifconfig", interface])
    #ifconfig_result = ifconfig_result.decode("utf-8")  # re.search() will not work with bytes object, decoding to utf-8

    mac_address_search_result = re.search(r"\w\w:\w\w:\w\w:\w\w:\w\w:\w\w", str(ifconfig_result))
    if mac_address_search_result:
        return mac_address_search_result.group(0)
    else:
        print("[-] Could not read MAC address")

options = get_arguments() #get users arguements

current_mac = get_current_mac(options.interface) #get current mac address of interface
print("Current MAC = " + str(current_mac)) #printing current mac address

change_mac(options.interface, options.new_mac) #changing mac address

current_mac = get_current_mac(options.interface) #get current mac again after change
if current_mac == options.new_mac.lower():
    print("[+] MAC address was succesfully changed to "+ current_mac)
else:
    print("[-] MAC address did not get changed.")
